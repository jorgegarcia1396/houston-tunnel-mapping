# Houston Tunnel Mapping System (EDA with Python)

This Python notebook explores the Houston Tunnel system.

```{python}
import geopandas as gpd
import numpy as np
import matplotlib.pyplot as plt
```

```{python}
tunnels = gpd.read_file('tunnels.geojson', engine='pyogrio')
tunnels[['objectid', 'name', 'Shape__Length']].head()
```

```{python}
tunnels['name'].count()
```

```{python}
tunnels.plot(figsize=(10,10), column='name')
plt.show()
```

```{python}
# Calculate the distance in meters and feet for UTM 15N (EPSG:32615)

meters = tunnels.to_crs('EPSG:32615').length
footage = meters * 3.2808399

tunnels['footage'] = footage

# Compare Shape__Length and footage columns
tunnels[['name', 'Shape__Length', 'footage']]
```

```{python}
# Calculate total miles of tunnels

tunnels['Shape__Length'].sum() / 5280
```

```{python}
tunnels['footage'].sum() / 5280
```

Examine buildings of the Tunnel System.

```{python}
buildings = gpd.read_file('buildings-within-tunnels.geojson', engine='pyogrio')
buildings.info()
```

```{python}
buildings[['objectid', 'buildingname', 'Shape__Area']].head()
```

```{python}
fig, ax = plt.subplots(1, 1, figsize=(10,10))
ax.set_axis_off()

buildings.plot(ax=ax, column='geomtype', alpha=0.75)
tunnels.plot(ax=ax, column='name')
plt.title('Downtown Tunnel System Overview')
plt.show()
```

```{python}
buildings['Shape__Area'].sum()
```

```{python}
buildings.hist('Shape__Area', figsize=(10,6))
plt.title('Histogram of Building Square Footage')
plt.xlabel('Sq Ft')
plt.show()
```

```{python}
business = gpd.read_file('business.geojson')
business.info()
```

```{python}
business.head()
```

```{python}
fig, ax = plt.subplots(1, 1, figsize=(14,14))

fig.patch.set_linewidth(5)
fig.patch.set_edgecolor('navy')

buildings.plot(ax=ax, column='geomtype', alpha=0.7)
tunnels.plot(ax=ax, column='name')
business.plot(ax=ax, column='tunnel_name')

plt.title('Houston Tunnel Business Locations')
plt.axis(False)
plt.show()
```
